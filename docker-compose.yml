version: "3.9"

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  elasticsearch_data:
    driver: local

services:
  mysql:
    image: mysql
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my-app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-chat_system}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: username
      MYSQL_PASSWORD: password

  redis:
    image: redis
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - my-app-network
    tty: true
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 10s
      interval: 10s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.9-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my-app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 3s
      retries: 10

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/var/lib/elasticsearch/data
    networks:
      my-app-network:
        aliases:
          - rabbitmq
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.monitoring.templates.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail http://elasticsearch:9200 || exit 1",
        ]
      interval: 3s
      retries: 10

  web:
    build: .
    restart: always
    ports:
      - 4000:3000
    command: sh -c "sh ./init.sh && rails s -p 3000 -b '0.0.0.0' -e development"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail http://web:3000/healthcheck || exit 1",
        ]
      interval: 5s
      retries: 10
    networks:
      - my-app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - RAILS_LOG_TO_STDOUT=true
      - DATABASE_HOST=mysql
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  sidekiq:
    build: .
    restart: always
    command: bundle exec sidekiq
    networks:
      - my-app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    environment:
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=true
      - DATABASE_HOST=mysql
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  sneakers:
    build: .
    restart: always
    command: bundle exec rake sneakers:run
    networks:
      my-app-network:
        aliases:
          - rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      web:
        condition: service_healthy
    environment:
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=true
      - DATABASE_HOST=mysql
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
networks:
  my-app-network:
    driver: bridge
